install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
packageVersion("swirl")
install_from_swirl("R Programming")
swirl()
head(flags)
dim(flags)
View(flags)
class(flag)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat sapply(flag_shapes, range)
shape_mat <-  sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, unique)
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags&landmass)
table(flags$landmass)
table(flags$animate)
tapply(flags$ani, flags$landmass, mean)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
mean(Sepal.Length)
head(iris)
head(iris$Sepal.Length)
mean(iris$Sepal.Length)
head(iris[$Sepal.Length]1:4,)
head(iris[1:4,])
head(iris[,1:4])
rowMeans(iris[, 1:4])
class(rowMeans(iris[, 1:4]))
?apply
apply(iris[, 1:4], 1, mean)
class(apply(iris[, 1:4], 1, mean))
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
tail(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
unique(mtcars$cyl)
sapply(mtcars, cyl, mean)
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
apply(mtcars, 2, mean)
mean(mtcars$mpg, mtcars$cyl)
lapply(mtcars, mean)
apply(mtcars, 2, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)[2]-tapply(mtcars$hp, mtcars$cyl, mean)[1]
debug(ls)
ls
n
ls()
tapply(Sepal.Length, Species, mean)["virginica"]
tapply(Sepal.Length, Species, mean)
end
q
exit
e
Q
getwd
getwd()
setwd("C:\\Users\\Ande\\Documents\\files\\Data Science\\hw\\ProgrammingAssignment2")
getwed()
getwd()
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
a <- makeCacheMatrix(matrix(1:4, 2, 2))
a
a$get()
class(a)
cacheSolve(a)
cacheSolve(a)
cacheSolve(a)
a$set(3:7, 1:4)
a$set(3:7, 1,4)
a$set(matrix(3:7, 1,4)
)
a$set(matrix(3:6, 1,4))
cacheSolve(a)
a$set(matrix(3:6, 2,2))
cacheSolve(a)
cacheSolve(a)
